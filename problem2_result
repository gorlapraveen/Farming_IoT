GLPSOL: GLPK LP/MIP Solver, v4.52
Parameter(s) specified in the command line:
 --cpxlp /tmp/19291-pulp.lp -o /tmp/19291-pulp.sol
Reading problem data from '/tmp/19291-pulp.lp'...
80 rows, 72 columns, 285 non-zeros
72 integer variables, none of which are binary
336 lines were read
GLPK Integer Optimizer, v4.52
80 rows, 72 columns, 285 non-zeros
72 integer variables, none of which are binary
Preprocessing...
77 rows, 72 columns, 279 non-zeros
72 integer variables, 36 of which are binary
Scaling...
 A: min|aij| =  1.000e+00  max|aij| =  1.000e+00  ratio =  1.000e+00
Problem data seem to be well scaled
Constructing initial basis...
Size of triangular part is 77
Solving LP relaxation...
GLPK Simplex Optimizer, v4.52
77 rows, 72 columns, 279 non-zeros
      0: obj =   6.100000000e+01  infeas =  3.600e+01 (0)
*    29: obj =   6.100000000e+01  infeas =  3.172e-17 (0)
*    38: obj =   5.800000000e+01  infeas =  8.882e-16 (0)
OPTIMAL LP SOLUTION FOUND
Integer optimization begins...
+    38: mip =     not found yet >=              -inf        (1; 0)
+    49: >>>>>   5.900000000e+01 >=   5.800000000e+01   1.7% (7; 0)
+    66: >>>>>   5.800000000e+01 >=   5.800000000e+01   0.0% (5; 5)
+    66: mip =   5.800000000e+01 >=     tree is empty   0.0% (0; 15)
INTEGER OPTIMAL SOLUTION FOUND
Time used:   0.0 secs
Memory used: 0.2 Mb (177898 bytes)
Writing MIP solution to `/tmp/19291-pulp.sol'...
status: Optimal
optimal cost: 58
f ((2, 5), 1) 1 : 1
f ((2, 5), 1) 2 : 1
f ((5, 6), 1) 2 : 1
f ((1, 3), 1) 1 : 1
f ((1, 3), 1) 3 : 1
f ((1, 6), 1) 3 : 1
f ((3, 4), 1) 2 : 1
f ((4, 1), 1) 1 : 1
f ((4, 1), 1) 2 : 1
f ((6, 2), 1) 2 : 1
f ((5, 3), 1) 1 : 1
f ((5, 3), 1) 2 : 1
f ((5, 3), 1) 3 : 1
g ((2, 5), 1) (((2, 5), 1), 1) 1 : 1
g ((2, 5), 1) (((2, 5), 1), 1) 2 : 1
g ((5, 6), 1) (((5, 6), 1), 1) 2 : 1
g ((1, 3), 1) (((1, 3), 1), 2) 1 : 1
g ((1, 3), 1) (((1, 3), 1), 1) 3 : 1
g ((1, 6), 1) (((1, 6), 1), 1) 3 : 1
g ((3, 4), 1) (((3, 4), 1), 1) 2 : 1
g ((4, 1), 1) (((4, 1), 1), 1) 1 : 1
g ((4, 1), 1) (((4, 1), 1), 1) 2 : 1
g ((6, 2), 1) (((6, 2), 1), 1) 2 : 1
g ((5, 3), 1) (((5, 3), 1), 2) 1 : 1
g ((5, 3), 1) (((5, 3), 1), 2) 2 : 1
g ((5, 3), 1) (((5, 3), 1), 2) 3 : 1

